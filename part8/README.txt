Жадные алгоритмы.

На каждом шаге выбирается локально-оптимальное решение, в итоге получается глобально-оптимальное решение.
Но так не всегда работает.
Жадные алгоритмы просто реализуются, а полученные результаты обычно близки к оптимуму (приближенные алгоритмы).
Приближенные алгоритмы - когда вычисления занимают слишком много времени, применяется приближенный алгоритм.
Эффективность приближенного алгоритма оценивается по быстроте и близости полученного решения к оптимальному.
Жадный алгоритм выполняется за время О(n^2).

Множество. Это структура данных похожий на список, но каждый элемент может встречаться в множестве не более одного раза.
- Объединение множеств означает слияние элементов обоих множеств.
- Пересечение множеств - поиск элементов, входящих в оба множества.
- Разность множеств - исключение из одного множества элементов, присутствующих в другом множестве.

NP-полные задачи. Некоторые задачи имеют сложное решение - задача о коммивояжере и задача о покрытии множества. Написать
быстрый алгоритм для решения таких задач невозможно.
Не существует простого способа определить, является ли задача NP-полной. Несколько характерных признаков:
1. Алгоритм быстро работает при малом количестве элементов, но сильно замедляется при увеличении их числа;
2. Формулировка "все комбинации Х";
3. Приходится вычислять все возможные варианты Х, потому что задачу невозможно разбить на меньшие подзадачи? м.б. NP-полной;
4. Если в задаче встречается некоторая последовательность (например, последовательность городов) и задача не имеет простого решения? м.б. NP-полной;
5. Если в задаче встречается некоторое множество (например, множество радиостанций) и задача не имеет простого решения? м.б. NP-полной;
6. Можно ли переформулировать задачу в условиях задачи покрытия множества или задачи о коммивояжере? В таком случае определенно NP-полная задача;

