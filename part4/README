Скорость работы алгоритма быстрой сортировки зависит от выбора опорного элемента.
В худшем случае быстрая сортировка работает за время О(n * n). В среднем быстрая сортировка работает за время O(n log n).

А сортировка слиянием всегда выполняется за O(n log n).

Если быстрая сортировка в среднем выполняется за время O(n log n), а сортировка слиянием выполняется за время O(n log n) всегда,
то почему не использовать сортировку слиянием?

Когда используют О-большое (например, О(n)), в действительности это означает следующее:
 с * n
c - некоторый фиксированный промежуток времени для алгоритма (константа).

Обычно константа игнорируется, потому что если два алгоритма имеют разное время "О-большое", она роли не играет.
Однако в некоторых случаях константа может иметь значение. Один из примеров - быстрая сортировка и сортировка слиянием.
У быстрой сортировки константа меньше, чем у сортировки слиянием, поэтому несмотря на то что оба алгоритма характеризуются
временем О(n * log n), быстрая сортировка работает быстрее. А на практике быстрая сортировка работает быстрее, потому что
средний случай встречается намного чаще худшего.
Как выглядит средний случай по сравнению с худшим? Если всегда выбирать опорным элементом случайный элемент в массиве.